using Microsoft.AspNetCore.Http;

namespace Solution.Validators
{
    public class CarModelValidator: BaseValidator<CarModel>
    {

        public static string ModelProperty => nameof(CarModel.Model);
        public static string CubicProperty => nameof(CarModel.Cubic);
        public static string ManufacturerProperty => nameof(CarModel.Manufacturer);
        public static string TypeProperty => nameof(CarModel.Type);
        public static string NumberOfDoorsProperty => nameof(CarModel.NumberOfDoors);
        public static string ReleaseYearProperty => nameof(CarModel.ReleaseYear);
        public static string GlobalProperty => "Global";

        public CarModelValidator(IHttpContextAccessor httpContextAccessor) :base(httpContextAccessor)
        {
            if(IsPutMethod)
            {
                RuleFor(x => x.Id).NotEmpty().WithMessage("Id is required for update");
                //validalni hogy az id letezik
            }

            RuleFor(x => x.Model).NotEmpty().WithMessage("Model is required");
            RuleFor(x => x.Cubic).NotNull().WithMessage("Cubic is required")
                                 .GreaterThan(0).WithMessage("Cubic has to be greater then 0");
            
            RuleFor(x => x.Manufacturer).NotNull().WithMessage("Manufacturer is required");
            RuleFor(x => x.Manufacturer.Id).GreaterThan(0).WithMessage("Manufacturer Id can not be 0")
                                           .When(x => x.Manufacturer != null);
            RuleFor(x => x.Manufacturer.Name).NotEmpty().WithMessage("Manufacturer name is required")
                                             .When(x => x.Manufacturer != null);
            
            //validalni hogy letezik e ilyen id-j? gyártó
            RuleFor(x => x.NumberOfDoors).NotNull().WithMessage("Doors are required")
                                         .GreaterThan(0).WithMessage("Number of doors has to be greater then 0");
            RuleFor(x => x.ReleaseYear).NotNull().WithMessage("Release year is required")
                                       .InclusiveBetween(1900, DateTime.Now.Year).WithMessage("Invalid release year");
            
            RuleFor(x => x.Type).NotEmpty().WithMessage("Type is required");
            RuleFor(x => x.Type.Id).GreaterThan(0).WithMessage("Type Id can not be 0")
                                   .When(x => x.Type != null);
            RuleFor(x => x.Type.Name).NotEmpty().WithMessage("Type name is required")
                                     .When(x => x.Type != null);
            //validalni hogy letezik e ilyen id-j? típus
        }

    }
}