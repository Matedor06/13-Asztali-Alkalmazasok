<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:sf="clr-namespace:Syncfusion.Maui.Toolkit.TextInputLayout;assembly=Syncfusion.Maui.Toolkit"
             xmlns:validator="clr-namespace:Solution.Validators;assembly=Solution.Validators"
             xmlns:converters="clr-namespace:Solution.DesktopApp.Converters"
             xmlns:editors="clr-namespace:Syncfusion.Maui.Toolkit.NumericEntry;assembly=Syncfusion.Maui.Toolkit"
             xmlns:viewModels="clr-namespace:Solution.DesktopApp.ViewModels"
             xmlns:models="clr-namespace:Solution.Core.Models;assembly=Solution.Core"
             xmlns:behaviors="clr-namespace:Solution.DesktopApp.Behaviors"
             x:Class="Solution.DesktopApp.Views.CreateOrEditCarView"
             x:DataType="viewModels:CreateOrEditCarViewModel"
             x:Name="this"
             BackgroundColor="{AppThemeBinding Light=#F5F5F5, Dark=#1E1E1E}">
  
    <ContentPage.Behaviors>
        <toolkit:EventToCommandBehavior Command="{Binding AppearingCommand}" 
                                        EventName="Appearing"/>
        <toolkit:EventToCommandBehavior Command="{Binding DisappearingCommand}" 
                                        EventName="Disappearing" />
    </ContentPage.Behaviors>

    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:ValidationResultToErrorMessagesConverter x:Key="ValidationResultToErrorMessagesConverter" />
            <converters:ValidationResultToHasErrorConverter x:Key="ValidationResultToHasErrorConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <ScrollView Padding="20">
        <Grid RowSpacing="20" ColumnSpacing="30" HorizontalOptions="Center" VerticalOptions="Center" MaximumWidthRequest="900">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Page Title - Spans both columns -->
            <Label Grid.Row="0" 
                   Grid.Column="0" 
                   Grid.ColumnSpan="2"
                   Text="{Binding Title}" 
                   Style="{StaticResource PageTitle}" 
                   HorizontalOptions="Center" 
                   Margin="0,20,0,30" />

            <!-- LEFT COLUMN - Image Upload Section -->
            <Border Grid.Row="1" 
                    Grid.Column="0"
                    BackgroundColor="{AppThemeBinding Light=White, Dark=#2D2D2D}"
                    Stroke="{AppThemeBinding Light=#E0E0E0, Dark=#404040}"
                    StrokeThickness="1"
                    Padding="20"
                    VerticalOptions="Start">
                <Border.StrokeShape>
                    <RoundRectangle CornerRadius="10" />
                </Border.StrokeShape>
                
                <StackLayout Orientation="Vertical" 
                             Spacing="20" 
                             HorizontalOptions="Center"
                             VerticalOptions="Center">
                    <Label Text="🚗 Car Image" 
                           FontSize="18" 
                           FontAttributes="Bold"
                           TextColor="{AppThemeBinding Light=#333, Dark=#CCC}"
                           HorizontalOptions="Center" />
                    
                    <Border BackgroundColor="{AppThemeBinding Light=#F8F8F8, Dark=#3A3A3A}"
                            Stroke="{AppThemeBinding Light=#E0E0E0, Dark=#404040}"
                            StrokeThickness="1"
                            Padding="10">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="8" />
                        </Border.StrokeShape>
                        
                        <Image Source="{Binding Image}" 
                               WidthRequest="300" 
                               HeightRequest="250" 
                               Aspect="AspectFit" />
                    </Border>
                    
                    <Button Text="📷 Select Image" 
                            Command="{Binding ImageSelectCommand}"
                            BackgroundColor="{AppThemeBinding Light=#2196F3, Dark=#1976D2}"
                            TextColor="White"
                            FontSize="16"
                            FontAttributes="Bold"
                            CornerRadius="25"
                            HeightRequest="50"
                            WidthRequest="200" />
                    
                    <Label Text="Click the button above to select a car image"
                           FontSize="12"
                           TextColor="{AppThemeBinding Light=#999, Dark=#777}"
                           HorizontalOptions="Center"
                           HorizontalTextAlignment="Center" />
                </StackLayout>
            </Border>

            <!-- RIGHT COLUMN - Form Fields -->
            <Border Grid.Row="1" 
                    Grid.Column="1"
                    BackgroundColor="{AppThemeBinding Light=White, Dark=#2D2D2D}"
                    Stroke="{AppThemeBinding Light=#E0E0E0, Dark=#404040}"
                    StrokeThickness="1"
                    Padding="20"
                    VerticalOptions="Start">
                <Border.StrokeShape>
                    <RoundRectangle CornerRadius="10" />
                </Border.StrokeShape>
                
                <ScrollView>
                    <StackLayout Spacing="20">
                        <Label Text="📝 Car Details" 
                               FontSize="18" 
                               FontAttributes="Bold"
                               TextColor="{AppThemeBinding Light=#333, Dark=#CCC}"
                               HorizontalOptions="Center"
                               Margin="0,0,0,10" />
                        
                        <!-- Manufacturer Picker -->
                        <sf:SfTextInputLayout Hint="Manufacturer"
                                              ContainerType="Outlined"
                                              OutlineCornerRadius="8"
                                              ErrorText="{Binding ValidationResult, 
                                                                  Converter={StaticResource ValidationResultToErrorMessagesConverter},
                                                                  ConverterParameter={x:Static validator:CarModelValidator.ManufacturerProperty}}"
                                              HasError="{Binding ValidationResult, 
                                                                 Converter={StaticResource ValidationResultToHasErrorConverter}, 
                                                                 ConverterParameter={x:Static validator:CarModelValidator.ManufacturerProperty}}">
                            <Picker ItemsSource="{Binding Manufacturers}" 
                                    SelectedItem="{Binding Manufacturer}"
                                    ItemDisplayBinding="{Binding Name}">
                                <Picker.Behaviors>
                                    <toolkit:EventToCommandBehavior EventName="SelectedIndexChanged"
                                                                    BindingContext="{Binding Source={x:Reference this}, Path=BindingContext}"
                                                                    Command="{Binding ValidateCommand}"
                                                                    CommandParameter="{x:Static validator:CarModelValidator.ManufacturerProperty}" />
                                </Picker.Behaviors>
                            </Picker>
                        </sf:SfTextInputLayout>

                        <!-- Type Picker -->
                        <sf:SfTextInputLayout Hint="Type"
                                              ContainerType="Outlined"
                                              OutlineCornerRadius="8"
                                              ErrorText="{Binding ValidationResult, 
                                                                  Converter={StaticResource ValidationResultToErrorMessagesConverter},
                                                                  ConverterParameter={x:Static validator:CarModelValidator.TypeProperty}}"
                                              HasError="{Binding ValidationResult, 
                                                                 Converter={StaticResource ValidationResultToHasErrorConverter}, 
                                                                 ConverterParameter={x:Static validator:CarModelValidator.TypeProperty}}">
                            <Picker ItemsSource="{Binding Types}" 
                                    SelectedItem="{Binding Type}"
                                    ItemDisplayBinding="{Binding Name}">
                                <Picker.Behaviors>
                                    <toolkit:EventToCommandBehavior EventName="SelectedIndexChanged"
                                                                    BindingContext="{Binding Source={x:Reference this}, Path=BindingContext}"
                                                                    Command="{Binding ValidateCommand}"
                                                                    CommandParameter="{x:Static validator:CarModelValidator.TypeProperty}" />
                                </Picker.Behaviors>
                            </Picker>
                        </sf:SfTextInputLayout>

                        <!-- Model Entry -->
                        <sf:SfTextInputLayout Hint="Model"
                                              ContainerType="Outlined"
                                              OutlineCornerRadius="8"
                                              ErrorText="{Binding ValidationResult, 
                                                                  Converter={StaticResource ValidationResultToErrorMessagesConverter},
                                                                  ConverterParameter={x:Static validator:CarModelValidator.ModelProperty}}"
                                              HasError="{Binding ValidationResult, 
                                                                 Converter={StaticResource ValidationResultToHasErrorConverter}, 
                                                                 ConverterParameter={x:Static validator:CarModelValidator.ModelProperty}}">
                            <Entry Text="{Binding Model}">
                                <Entry.Behaviors>
                                    <toolkit:EventToCommandBehavior EventName="TextChanged"
                                                                    BindingContext="{Binding Source={x:Reference this}, Path=BindingContext}"
                                                                    Command="{Binding ValidateCommand}"
                                                                    CommandParameter="{x:Static validator:CarModelValidator.ModelProperty}" />
                                </Entry.Behaviors>
                            </Entry>
                        </sf:SfTextInputLayout>

                        <!-- Cubic Entry -->
                        <sf:SfTextInputLayout Hint="Cubic (cc)"
                                              ContainerType="Outlined"
                                              OutlineCornerRadius="8"
                                              ErrorText="{Binding ValidationResult, 
                                                                  Converter={StaticResource ValidationResultToErrorMessagesConverter},
                                                                  ConverterParameter={x:Static validator:CarModelValidator.CubicProperty}}"
                                              HasError="{Binding ValidationResult, 
                                                                 Converter={StaticResource ValidationResultToHasErrorConverter}, 
                                                                 ConverterParameter={x:Static validator:CarModelValidator.CubicProperty}}">
                            <Entry Text="{Binding Cubic}" 
                                   Keyboard="Numeric">
                                <Entry.Behaviors>
                                    <toolkit:EventToCommandBehavior EventName="TextChanged"
                                                                    BindingContext="{Binding Source={x:Reference this}, Path=BindingContext}"
                                                                    Command="{Binding ValidateCommand}"
                                                                    CommandParameter="{x:Static validator:CarModelValidator.CubicProperty}" />
                                </Entry.Behaviors>
                            </Entry>
                        </sf:SfTextInputLayout>

                        <!-- Release Year Entry -->
                        <sf:SfTextInputLayout Hint="Release Year"
                                              ContainerType="Outlined"
                                              OutlineCornerRadius="8"
                                              ErrorText="{Binding ValidationResult, 
                                                                  Converter={StaticResource ValidationResultToErrorMessagesConverter},
                                                                  ConverterParameter={x:Static validator:CarModelValidator.ReleaseYearProperty}}"
                                              HasError="{Binding ValidationResult, 
                                                                 Converter={StaticResource ValidationResultToHasErrorConverter}, 
                                                                 ConverterParameter={x:Static validator:CarModelValidator.ReleaseYearProperty}}">
                            <Entry Text="{Binding ReleaseYear}" 
                                   Keyboard="Numeric">
                                <Entry.Behaviors>
                                    <toolkit:EventToCommandBehavior EventName="TextChanged"
                                                                    BindingContext="{Binding Source={x:Reference this}, Path=BindingContext}"
                                                                    Command="{Binding ValidateCommand}"
                                                                    CommandParameter="{x:Static validator:CarModelValidator.ReleaseYearProperty}" />
                                </Entry.Behaviors>
                            </Entry>
                        </sf:SfTextInputLayout>

                        <!-- Number of Doors Picker -->
                        <sf:SfTextInputLayout Hint="Number of Doors"
                                              ContainerType="Outlined"
                                              OutlineCornerRadius="8"
                                              ErrorText="{Binding ValidationResult, 
                                                                  Converter={StaticResource ValidationResultToErrorMessagesConverter},
                                                                  ConverterParameter={x:Static validator:CarModelValidator.NumberOfDoorsProperty}}"
                                              HasError="{Binding ValidationResult, 
                                                                 Converter={StaticResource ValidationResultToHasErrorConverter}, 
                                                                 ConverterParameter={x:Static validator:CarModelValidator.NumberOfDoorsProperty}}">
                            <Picker ItemsSource="{Binding Doors}" 
                                    SelectedItem="{Binding NumberOfDoors}"
                                    Title="Select number of doors">
                                <Picker.Behaviors>
                                    <toolkit:EventToCommandBehavior EventName="SelectedIndexChanged"
                                                                    BindingContext="{Binding Source={x:Reference this}, Path=BindingContext}"
                                                                    Command="{Binding ValidateCommand}"
                                                                    CommandParameter="{x:Static validator:CarModelValidator.NumberOfDoorsProperty}" />
                                </Picker.Behaviors>
                            </Picker>
                        </sf:SfTextInputLayout>
                    </StackLayout>
                </ScrollView>
            </Border>

            <!-- Submit Button - Spans both columns -->
            <Border Grid.Row="2" 
                    Grid.Column="0" 
                    Grid.ColumnSpan="2"
                    BackgroundColor="{AppThemeBinding Light=White, Dark=#2D2D2D}"
                    Stroke="{AppThemeBinding Light=#E0E0E0, Dark=#404040}"
                    StrokeThickness="1"
                    Padding="20"
                    Margin="0,10,0,0">
                <Border.StrokeShape>
                    <RoundRectangle CornerRadius="10" />
                </Border.StrokeShape>
                
                <Button Text="✅ Submit" 
                        Command="{Binding SubmitCommand}" 
                        BackgroundColor="{AppThemeBinding Light=#4CAF50, Dark=#388E3C}"
                        TextColor="White"
                        FontSize="16"
                        FontAttributes="Bold"
                        CornerRadius="25"
                        HeightRequest="50"
                        WidthRequest="300"
                        HorizontalOptions="Center" />
            </Border>
            
        </Grid>
    </ScrollView>

</ContentPage>